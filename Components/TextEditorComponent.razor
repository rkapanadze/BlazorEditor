@using Blazored.TextEditor

<button @onclick="ToggleToolbar">Toggle Toolbar</button>

<BlazoredTextEditor @ref="QuillHtml" Placeholder="Please input text">
    <ToolbarContent>
        <div style="@(ShowToolbar ? "" : "display: none;")">
            <span class="ql-formats">
                <button class="ql-bold">B</button>
                <button class="ql-italic">I</button>
                <button class="ql-underline">U</button>
            </span>
            <span class="ql-formats">
                <select class="ql-header">
                    <option value="1">H1</option>
                    <option value="2">H2</option>
                    <option value="3">H3</option>
                </select>
            </span>
            <span class="ql-formats">
                <button class="ql-link"></button>
            </span>
            <span class="ql-formats">
                <button class="ql-image"></button>
            </span>
        </div>
    </ToolbarContent>
</BlazoredTextEditor>

@code
{
    [Parameter] public bool ShowToolbar { get; set; } = true;
    [Parameter] public string Value { get; set; }
    [Parameter] public EventCallback<string> OnValueChanged { get; set; }

    private BlazoredTextEditor QuillHtml;

    private void ToggleToolbar()
    {
        ShowToolbar = !ShowToolbar;
    }

    private async Task UpdateValue()
    {
        Value = await QuillHtml.GetHTML();
        await OnValueChanged.InvokeAsync(Value);
    }

    public async Task<string> GetEditorHTML()
    {
        await UpdateValue();
        return Value;
    }
}